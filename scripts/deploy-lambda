#!/bin/bash
# Deploys the email send JS scripts to AWS Lambda.
#
# @category     Scripts
# @package      Bricebentler.com
# @copyright    Copyright (c) 2019 Bentler Design (www.bricebentler.com)
# @author       Brice Bentler <me(at)bricebentler(dot)com>

# Let non-zero exit codes kill the script, even in a pipe.
set -eo pipefail

function usage {
  echo "Usage:"
  echo "  ./$(basename "${0}") [options]"
  echo ""
  echo "Options:"
  echo "  -h, --help - Print this help message."
  echo "  -d, --dryrun - Don't actually deploy anything. Only show what would have happened."
}

while test $# -gt 0; do
  case "$1" in
    -h|--help)   usage
                 exit 0
                 ;;
    -d|--dryrun) DRYRUN=true
                 shift
                 ;;
    *)           >&2 echo -e "\nERROR: Invalid argument: '${1}'"
                 usage
                 exit 1
                 ;;
  esac
done

CURRENT_DIR_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CONFIG_PATH="${CURRENT_DIR_PATH}/config/secrets.sh"

if [ ! -f "${CONFIG_PATH}" ]; then
  >&2 echo "Cannot find config file at: ${CONFIG_PATH}"
  exit 1
fi

# Exports the LAMBDA_PROFILE, LAMBDA_FUNC_NAME variables.
source "${CONFIG_PATH}"

if [[ ${DRYRUN} ]]; then
  FLAGS='--dryrun'
else
  FLAGS='--publish'
fi

# Build the lambda code and get the path to the artifact.
cd "${CURRENT_DIR_PATH}/../lambda/email-send"
echo "BUILDING ARTIFACT..."
artifact_file_name=$(npm run build | tail -n 1)
artifact_file_path="${CURRENT_DIR_PATH}/../lambda/email-send/build/${artifact_file_name}"

# TODO : Save the build to S3.

echo "DEPLOYING ARTIFACT TO LAMBDA..."
aws lambda update-function-code \
  --function-name "${LAMBDA_FUNC_NAME}" \
  --zip-file "fileb://${artifact_file_path}" \
  ${FLAGS}
